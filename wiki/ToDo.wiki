#summary TODOs et idées

=== xpr ===

reflect the nul.xpr in the wiki
show "dependancy descriptors"

=== equivalences ===

Les classes d'équivalences retiennent aussi une liste d'attributs spécifiés (par exemple, quand on y tape un objet hand-attributed)

Ces attributs sont utilisés sur le `one` - donc appliqués lors de changement d'attribut ou le changement de prototype.

=== tests ===

(1 `[]` 2) = 2 ==> `[`number:2`]`

Ici, encore des klg vides
(+ unittest back)

 # possible que ior3ndx vide ==> valeur sans condition. Quand klg.ior3 vide, on l'enlève du knowledge et on supprime le ior3ndx (donc browse et change les obj.ior3)
 # summarry dependances : si personne ne réfère un klg.ior3, on supprime les valeurs vides dedans.
 # si un klg.ior3s contient un élément, on le merge au klg. (note: on peut laisser ça au 'solve')