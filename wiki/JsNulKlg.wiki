#summary Internal representation of knowledge
#labels Phase-Implementation

= Introduction =

The internal representation of NulKlg are a !JavaScript object that have these :

== methods ==

|| merge || function(JsNulKlg) => JsNulPossibiles`<`JsNulKlg`>` || Creates a new knowledge knowing all assertions of this one and of the given one. ||
|| unify || function(JsNulObj, ...) => JsNulObj || Get the best representation for all the given JsNulObj, knowing that they are all equivalents. ||
|| belong || function(JsNulObj set, JsNulObj itm) => JsNulObj || Get the best representation of `itm` knowing that it belongs to `set`. ||
|| minXst || int() || The minimum possible fixed values this fuzzy object can take. ||
|| maxXst || int() || The maximum possible fixed values this fuzzy object can take. ||
|| fixed || bool() || Weither the existence is strictly one ({{{fixed = 1==minXst && 1==maxXst}}}). ||

== Internal representation of knowledge ==

The knowledge is stored as a list of NulEquivalenceClass.

There is therefore an member `eqCls` that is a collection of JsNulEquivalenceClass.

The `access` member allow to find an eqClass from an expression (to find if the expression is already refered in this knowledge). The `eqCls` member is an array that can contains `null` values to keep coherent with the `access` content.