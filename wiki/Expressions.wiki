#summary Some NUL expressions
#labels Featured,program

= Not yet working =

== Subset ==

Is `a` a subset of `E` ?
Yes, if and only if the set of images of an item (`x`) by `a` is either the same set as the set of images of that item (`x`) by `E` or an empty set (empty set of images means that `x` has no image by `a`)
{{{
a, E :- \/x {a x} = ({E x} [] {})
}}}
Or, also, the intersection of `a` and `E` is `a`
{{{
a, E :- a = a * E
}}}
The `operator*` function of the primitive `set` will, anyway, look like this :
{{{
::*
{:mult {} :- { _ :- _}
    [] {a, b,.. S} :- mult({x :- (a x = b x)},.. S)
}
}}}

== vector`<T>` ==

This is the set that associate to any type T the type "list of Ts".
{{{
list = { type :- {:tlist {} [] type _,.. tlist _} }
}}}
This, for example, verify {{{list Z (1, 17, 8, 6, 2)}}}
= Working =

== Factorial ==
{{{
{:f 0:-1
 [] Z x > 0 :- x * f(x-1)
} 3
}}}

== Fibonacci ==
=== quick & dirty ===
{{{
{:fib (0 [] 1) :- 1
    [] Z n > 1 :- fib(n-1) + fib(n-2)
} 10
}}}

=== optimised (accmlation) ===
{{{
{ Z n > 0 :-
  {:fibaux
      (Z x, _, 0) :- x
   [] (Z x, Z y, Z z > 0) :- fibaux(y, x+y, z-1)
  } (1, 1, n)
} 10
}}}