 C:\Users\fmdm\AppData\Local\Google\Chrome\Application\3.0.195.27\Resources\Inspector\Images
http://marijn.haverbeke.nl/codemirror/manual.html

{:f f Q x [] }

{:f f x} equivaut f ::() "#set"
g => {:f g f x} ::: sous-set
:::La tautologie devrait etre reperee

nul.obj.defined.106 : dp[0] se repete
{:ss (x, 1); ss(x, 2) [] (x, 2); ss(x, 1) }

o::a { o.a _ }
::: noter l'autoref

:::: Query doit se passer dans global aussi ?
:::: idee : ne pas faire un simple .pruned() : enlever de 'global' tout ce qui est dans 'g' ... ?

.document["#sandBox b"]
::: bizarre a la reevaluation

.time.now.wertyrt
::: Si query renvoie failed (vide) : pq garder un klg global ?

( u::n 1 ::f "u" ::e "o", d::n 2 ::f "d" ::e "t" ) (x ::f "u")
::: fait iech le global : gerer les ior3 du global !!!


.library.file["lib/cmplx.nul"]
.library.file["lib/set.nul"]

set::sigma
 { \/x {x} => {}
[] (a,b,.. o) => ((a=>b),.. set.sigma[b,.. o] )
}
::: devrait noter l'auto-ref

(1, 2) .time.now.seconds
::: ne renvoie pas phi toujours

document["#sandBox"](text _)
xml["test.xml"](text _)


x 1
; set[1..3] x
; set
={ {}
[] \/a \/s (a,.. s) => ( set[s] [] (a,.. set[s]) )
}
:::faire! (developper)

todo {
sigma[1..]			//inf decomposition
}

Systeme d'unites !!!